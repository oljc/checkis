name: Version

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      channel:
        type: choice
        description: 'Version tag'
        required: true
        default: 'latest'
        options:
          - alpha
          - beta
          - rc
          - latest
      branch:
        description: 'Branch to release'
        required: true
        default: 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.version.outputs.published }}
      channel: ${{ steps.version.outputs.channel || inputs.channel || 'latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Create Release
        id: version
        uses: oljc/release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version-file: 'core/package.json'
          changelog-file: 'core/CHANGELOG.md'
          channel: ${{ inputs.channel || 'latest' }}
          branch: ${{ inputs.branch || 'main' }}

  publish:
    needs: release
    if: github.repository == 'oljc/checkis' && needs.release.outputs.published == 'true'
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 1
          ref: ${{ github.ref }}

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        name: Install pnpm
        with:
          run_install: false

      - name: Setup
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Publish Prepare
        run: pnpm run publish

      - name: Publish
        run: pnpm publish ./dist --tag ${{ needs.release.outputs.channel }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
